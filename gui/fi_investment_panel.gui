# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types fi_investment_panel_types
{
	type fi_investment_piechart = chart {
		blockoverride "datamodel" {
			datamodel = "[Building.GetState.MakeScope.GetList('building_owner_countries')]" 
		}
		blockoverride "heading" {
			text = "FI_PIE_CHART_HEADING"
		}
		blockoverride "tooltip" {
			tooltip = "FI_PIE_CHART_TOOLTIP"
		}
		blockoverride "pieslice" {
			value = "[Scope.GetCountry.MakeScope.Var('fi_target_state_number').GetValue]"
		}
		blockoverride "color" {
			color = "[Scope.GetCountry.GetMapColor]"
		}

		blockoverride "leftside_info" {
			raw_text = "[Scope.GetCountry.GetName]"
		}
		blockoverride "rightside1_info" {
			raw_text = "#bold #gold [Scope.GetCountry.MakeScope.Var('fi_target_state_number').GetValue|1] %#!#!"
		}
		blockoverride "rightside2_info" {
			raw_text = ""
		}
		blockoverride "pie_item_goto_button" {
			button = {
				using = clean_button
				size = { 100% 100% }
			}
		}
		blockoverride "piechartsize" {
			size = { 200 200 }
		}
		blockoverride "minimumsize" {
					minimumsize = { 550 -1 }
		}
		blockoverride "maxverticalslots" {
			maxverticalslots = 10
		}
	}

	type fi_investment_piechart_country1 = chart {
		blockoverride "datamodel" {
			datamodel = "[GetPlayer.MakeScope.GetList('my_country_owner_countries')]" 
		}

		blockoverride "heading" {
			text = "FI_PIE_CHART_HEADING_COUNTRY1"
		}
		blockoverride "tooltip" {
			tooltip = "FI_PIE_CHART_TOOLTIP_COUNTRY1"
		}
		blockoverride "pieslice" {
			value = "[Scope.GetCountry.MakeScope.Var('fi_target_country1_number').GetValue]"
		}
		blockoverride "color" {
			color = "[Scope.GetCountry.GetMapColor]"
		}

		blockoverride "leftside_info" {
			raw_text = "[Scope.GetCountry.GetName]"
		}
		blockoverride "rightside1_info" {
			raw_text = "#bold #gold [Scope.GetCountry.MakeScope.Var('fi_target_country1_number').GetValue|1] %#!#!"
		}
		blockoverride "rightside2_info" {
			raw_text = ""
		}
		blockoverride "pie_item_goto_button" {
			button = {
				using = clean_button
				size = { 100% 100% }
				datacontext = "[GetScriptedGui('fi_state_list_validation2')]"
				onclick = "[ScriptedGui.Execute(GuiScope.AddScope('investor_country', Scope.GetCountry.MakeScope).AddScope('player_country', GetPlayer.MakeScope).End )]"
			}
		}

		blockoverride "piechartsize" {
			size = { 240 240 }
		}
		
		blockoverride "maxverticalslots" {
			maxverticalslots = 7
		}
	}
	type fi_investment_piechart_country2 = chart {
		blockoverride "datamodel" {
			datamodel = "[GetPlayer.MakeScope.GetList('other_country_owner_countries')]" 
		}

		blockoverride "heading" {
			text = "FI_PIE_CHART_HEADING_COUNTRY2"
		}
		blockoverride "tooltip" {
			tooltip = "FI_PIE_CHART_TOOLTIP_COUNTRY2"
		}
		blockoverride "pieslice" {
			value = "[Scope.GetCountry.MakeScope.Var('fi_target_country2_number').GetValue]"
		}
		blockoverride "color" {
			color = "[Scope.GetCountry.GetMapColor]"
		}

		blockoverride "leftside_info" {
			raw_text = "[Scope.GetCountry.GetName]"
		}
		blockoverride "rightside1_info" {
			raw_text = "#bold #gold [Scope.GetCountry.MakeScope.Var('fi_target_country2_number').GetValue|1] %#!#!"
		}
		blockoverride "rightside2_info" {
			raw_text = ""
		}
		blockoverride "pie_item_goto_button" {
			button = {
				using = clean_button
				size = { 100% 100% }
				datacontext = "[GetScriptedGui('fi_state_list_validation2')]"
				onclick = "[ScriptedGui.Execute(GuiScope.AddScope('investor_country', Scope.GetCountry.MakeScope).AddScope('player_country', GetPlayer.MakeScope).End )]"
			}
		}

		blockoverride "piechartsize" {
			size = { 240 240 }
		}
		
		blockoverride "maxverticalslots" {
			maxverticalslots = 7
		}
	}
	type investment_overview_category_entry = container {
		parentanchor = hcenter
		minimumsize = { @panel_width_plus_20 -1 }

		flowcontainer = {
			parentanchor = hcenter
			minimumsize = { @panel_width_plus_20 -1 }
			direction = vertical
			spacing = 5
			
			alwaystransparent = no
			
			flowcontainer = {
				minimumsize = { @panel_width -1 }
				parentanchor = hcenter
				spacing = 20
				
				block "piecharts" {}
			}
		}
	}

	type fi_investment_panel = default_block_window {
		name = "fi_investment_panel"
		visible = "[GetVariableSystem.Exists('invest_panel_var')]"

		state = {
			name = 1
			trigger_on_create = yes
			on_start = "[GetVariableSystem.Set('fi_last_tab', 'my_invest_tab')]"
		}

		blockoverride "window_header_name"
		{
			text = "FI_PANEL_HEADER_NAME"
		}
		blockoverride "fixed_top"
		{
			investment_overview_category_entry = {
				blockoverride "piecharts" {
					fi_investment_piechart_country1 = {}
					fi_investment_piechart_country2 = {}
				}
			}
			tab_buttons = {
				blockoverride "first_button" {
					text = "MY_INVEST"
				}
				blockoverride "first_button_click" {
					onclick = "[GetVariableSystem.Set('invest_panel_var', 'my_invest_tab')]"
					onclick = "[GetVariableSystem.Set('fi_last_tab', 'my_invest_tab')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[GetVariableSystem.HasValue('invest_panel_var', 'my_invest_tab')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( GetVariableSystem.HasValue('invest_panel_var', 'my_invest_tab') )]"
				}
				blockoverride "first_button_selected" {
					text = "MY_INVEST"
				}

				blockoverride "second_button" {
					text = "OTHER_INVEST"
				}
				blockoverride "second_button_click" {
					onclick = "[GetVariableSystem.Set('invest_panel_var', 'other_invest_tab')]"
					onclick = "[GetVariableSystem.Set('fi_last_tab', 'other_invest_tab')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[GetVariableSystem.HasValue('invest_panel_var', 'other_invest_tab')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( GetVariableSystem.HasValue('invest_panel_var', 'other_invest_tab') )]"
				}
				blockoverride "second_button_selected" {
					text = "OTHER_INVEST"
				}

			}
			flowcontainer = {
				margin_top = 10
				visible = "[GetVariableSystem.HasValue('invest_panel_var', 'my_invest_tab')]"
				sort_button = {
					size = { 160 30 }
					text = "COUNTRY_TITLE"
					datacontext = "[GetScriptedGui('fi_sort_by_country_rank')]"
					onclick = "[ScriptedGui.Execute(GuiScope.AddScope('player_country', GetPlayer.MakeScope).End )]"
				}
				sort_button = {
					size = { 140 30 }
					text = "STATE_TITLE"
					datacontext = "[GetScriptedGui('fi_sort_by_state_gdp')]"
					onclick = "[ScriptedGui.Execute(GuiScope.AddScope('player_country', GetPlayer.MakeScope).End )]"
				}
				sort_button = {
					size = { 75 30 }
					tooltip = "MY_INVESTED_NUMBER"
					datacontext = "[GetScriptedGui('fi_sort_by_my_number')]"
					onclick = "[ScriptedGui.Execute(GuiScope.AddScope('player_country', GetPlayer.MakeScope).End )]"
					button = {
						texture = "gfx/interface/icons/generic_icons/secession_culture_possible.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}
				sort_button = {
					size = { 75 30 }
					tooltip = "TOTAL_INVESTED_NUMBER"
					datacontext = "[GetScriptedGui('fi_sort_by_total_number')]"
					onclick = "[ScriptedGui.Execute(GuiScope.AddScope('player_country', GetPlayer.MakeScope).End )]"
					button = {
						texture = "gfx/interface/icons/generic_icons/secession_culture_ongoing.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}
				sort_button = {
					size = { 85 30 }
					tooltip = "INVESTMENT_EFFICIENCY"
					datacontext = "[GetScriptedGui('fi_sort_by_investment_efficiency')]"
					onclick = "[ScriptedGui.Execute(GuiScope.AddScope('player_country', GetPlayer.MakeScope).End )]"
					button = {
						texture = "gfx/interface/buttons/sort_button_icons/sort_icon_profitability.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}			
			}
			flowcontainer = {
				margin_top = 10
				visible = "[GetVariableSystem.HasValue('invest_panel_var', 'other_invest_tab')]"

				sort_button = {
					size = { 140 30 }
					text = "STATE_TITLE"
					datacontext = "[GetScriptedGui('fi_sort_by_my_state_gdp')]"
					onclick = "[ScriptedGui.Execute(GuiScope.AddScope('player_country', GetPlayer.MakeScope).End )]"
				}
				sort_button = {
					size = { 75 30 }
					tooltip = "OTHER_INVESTED_NUMBER"
					datacontext = "[GetScriptedGui('fi_sort_by_total_number_foreign')]"
					onclick = "[ScriptedGui.Execute(GuiScope.AddScope('player_country', GetPlayer.MakeScope).End )]"
					button = {
						texture = "gfx/interface/icons/generic_icons/secession_culture_possible.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}
				sort_button = {
					size = { 320 30 }
				}			
			}
		}

		blockoverride "scrollarea_content"
		{
			flowcontainer = {
				using = default_list_position
				direction = vertical
				minimumsize = { @panel_width_plus_20 -1 }
				maximumsize = { @panel_width_plus_20 -1 }			
				margin_top = 10

				flowcontainer = {
					parentanchor = hcenter
					direction = vertical
					using = default_content_fade
					visible = "[GetVariableSystem.HasValue('invest_panel_var', 'my_invest_tab')]"
					
					flowcontainer = {	
						direction = vertical
						
						dynamicgridbox = {
							datamodel = "[AccessPlayer.MakeScope.GetList('invested_states')]"

							item = {
								flowcontainer = {
									using = unclickable_listentry_small
									minimumsize = { @panel_width 48 }
									alwaystransparent = no
									datacontext = "[Scope.GetState]"
									onmousehierarchyenter = "[AccessHighlightManager.HighlightState(State.Self)]"
									onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
									
									button = {
										using = default_button
										size = { 160 35 }
										parentanchor = vcenter
										datacontext = "[GetScriptedGui('fi_state_list_validation2')]"
										onmousehierarchyenter = "[AccessHighlightManager.HighlightCountry(Scope.GetState.GetCountry)]"
										onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
										onclick = "[ScriptedGui.Execute(GuiScope.AddScope('investor_country', Scope.GetState.GetCountry.MakeScope).AddScope('player_country', GetPlayer.MakeScope).End )]"
										textbox = {
											size = { 100% 100% }
											text = "[Scope.GetState.GetCountry.GetName]"
											align = hcenter
											parentanchor = vcenter
											multiline = yes

										}
									}
									
									widget = { size = { 5 5 }}

									button = {
										using = clean_button
										size = { 140 35 }
										parentanchor = vcenter
										datacontext = "[Scope.GetState]"
										onmousehierarchyenter = "[AccessHighlightManager.HighlightState(State.Self)]"
										onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
										onclick = "[InformationPanelBar.OpenStatePanel(State.AccessSelf )]"
										textbox = {
											size = { 100% 100% }
											text = "[Scope.GetState.GetName]"
											align = hcenter
											parentanchor = vcenter
											multiline = yes
										}
									}
									widget = {
										size = { 75 100% }
										textbox = {
											datacontext = "[Scope.GetState]"
											visible = "[And(NotEqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_item_number').GetValue, '(CFixedPoint)0'), EqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_item_queued').GetValue,'(CFixedPoint)0'))]"
											raw_text = "#bold #gold [Scope.GetState.MakeScope.Var('fi_state_item_number').GetValue]#!#!"
											size = { 100% 100% }
											align = hcenter
											margin_left = 8
											parentanchor = right|vcenter	
										}
										textbox = {
											datacontext = "[Scope.GetState]"
											visible = "[NotEqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_item_queued').GetValue,'(CFixedPoint)0')]"
											raw_text = "#bold #gold [Scope.GetState.MakeScope.Var('fi_state_item_number').GetValue]+[Scope.GetState.MakeScope.Var('fi_state_item_queued').GetValue]#!#! "
											size = { 100% 100% }
											align = hcenter
											margin_left = 8
											parentanchor = right|vcenter
										}
										icon = {
											texture = "gfx/interface/icons/generic_icons/secession_culture_possible.dds"
											size = { 30 30 }
											parentanchor = vcenter
											
										}
									}
									
									widget = {
										size = { 65 100% }
										textbox = {
											datacontext = "[Scope.GetState]"
											visible = "[And(NotEqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_total_number').GetValue, '(CFixedPoint)0'), EqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_total_queued').GetValue,'(CFixedPoint)0'))]"
											raw_text = "#bold [Scope.GetState.MakeScope.Var('fi_state_total_number').GetValue]#!#!"
											size = { 100% 100% }
											align = hcenter
											margin_left = 15
											parentanchor = right|vcenter
										}
										textbox = {
											datacontext = "[Scope.GetState]"
											visible = "[NotEqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_total_queued').GetValue,'(CFixedPoint)0')]"
											raw_text = "#bold [Scope.GetState.MakeScope.Var('fi_state_total_number').GetValue]+[Scope.GetState.MakeScope.Var('fi_state_total_queued').GetValue]#!#! "
											size = { 100% 100% }
											align = hcenter
											margin_left = 15
											parentanchor = right|vcenter
										}

										icon = {
											texture = "gfx/interface/icons/generic_icons/secession_culture_ongoing.dds"
											size = { 30 30 }
											parentanchor = vcenter
										}
									}
									widget = { size = { 11 11 }}

									textbox = {
										raw_text = "#bold #green [Scope.GetState.MakeScope.Var('fi_state_profit_calculater').GetValue|1]K#!#! "
										size = { 65 100% }
										align = right|nobaseline
										parentanchor = vcenter
										margin_left = 30

										icon = {
											texture = "gfx/interface/icons/generic_icons/coin_icon_01.dds"
											visible = "[LessThan_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_profit_calculater').GetValue,'(CFixedPoint)0')]"
											size = { 25 25 }
											parentanchor = vcenter
										}
										icon = {
											texture = "gfx/interface/icons/generic_icons/coin_icon_05.dds"
											visible = "[And(GreaterThanOrEqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_profit_calculater').GetValue,'(CFixedPoint)0'), LessThan_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_profit_calculater').GetValue,'(CFixedPoint)0.5'))]"
											size = { 25 25 }
											parentanchor = vcenter
										}
										icon = {
											texture = "gfx/interface/icons/generic_icons/coin_icon_09.dds"
											visible = "[And(GreaterThanOrEqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_profit_calculater').GetValue,'(CFixedPoint)0.5'), LessThan_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_profit_calculater').GetValue,'(CFixedPoint)1'))]"
											size = { 25 25 }
											parentanchor = vcenter
										}

										icon = {
											texture = "gfx/interface/icons/generic_icons/coin_icon_10.dds"
											visible = "[GreaterThanOrEqualTo_CFixedPoint(Scope.GetState.MakeScope.Var('fi_state_profit_calculater').GetValue,'(CFixedPoint)1')]"
											size = { 25 25 }
											parentanchor = vcenter
										}
										
									}				
								}
							}
						}	
					}
				}
				flowcontainer = {
					parentanchor = hcenter
					direction = vertical
					using = default_content_fade
					visible = "[GetVariableSystem.HasValue('invest_panel_var', 'other_invest_tab')]"
					
					flowcontainer = {	
						direction = vertical
						
						dynamicgridbox = {
							datamodel = "[AccessPlayer.MakeScope.GetList('invested_my_states')]"

							item = {
								flowcontainer = {
									using = unclickable_listentry_small
									minimumsize = { @panel_width 48 }
									alwaystransparent = no
									datacontext = "[Scope.GetState]"
									onmousehierarchyenter = "[AccessHighlightManager.HighlightState(State.Self)]"
		onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
									button = {
										using = clean_button
										size = { 150 35 }
										parentanchor = vcenter
										datacontext = "[State]"
										onclick = "[InformationPanelBar.OpenStatePanel(State.AccessSelf )]"
										textbox = {
											size = { 100% 100% }
											text = "[State.GetName]"
											align = center
											parentanchor = vcenter
											multiline = yes
										}
									}
									
									
									widget = {
										size = { 65 100% }
										textbox = {
											datacontext = "[State]"
											visible = "[And(NotEqualTo_CFixedPoint(State.MakeScope.Var('fi_state_total_number').GetValue, '(CFixedPoint)0'), EqualTo_CFixedPoint(State.MakeScope.Var('fi_state_total_queued').GetValue,'(CFixedPoint)0'))]"
											raw_text = "#bold [State.MakeScope.Var('fi_state_total_number').GetValue]#!#!"
											size = { 100% 100% }
											align = center
											parentanchor = right|vcenter
											margin_left = 20
										}
										textbox = {
											datacontext = "[State]"
											visible = "[NotEqualTo_CFixedPoint(State.MakeScope.Var('fi_state_total_queued').GetValue,'(CFixedPoint)0')]"
											raw_text = "#bold [State.MakeScope.Var('fi_state_total_number').GetValue]+[State.MakeScope.Var('fi_state_total_queued').GetValue]#!#! "
											size = { 100% 100% }
											align = center
											parentanchor = right|vcenter
											margin_left = 20
										}

										icon = {
											texture = "gfx/interface/icons/generic_icons/secession_culture_ongoing.dds"
											size = { 30 30 }
											parentanchor = vcenter
										}
									}
									button = {
										using = clean_button
										size = { 130 35 }
										parentanchor = vcenter
										datacontext = "[GetScriptedGui('buy_share_state_scripted_gui')]"
										tooltip = "FI_BUY_SHARE_TOOLTIP"
										enabled = "[ScriptedGui.IsValid(GuiScope.AddScope('invested_state', State.MakeScope).AddScope('investor_country', GetPlayer.MakeScope).End)]"
										onclick = "[ScriptedGui.Execute(GuiScope.AddScope('invested_state', State.MakeScope).AddScope('investor_country', GetPlayer.MakeScope).End)]"
										textbox = {
											size = { 100% 100% }
											text = "BUY_SHARE_FROM_COUNTRY"
											align = hcenter
											parentanchor = vcenter
											multiline = yes
										}
									}
									button = {
										using = clean_button
										size = { 190 35 }
										parentanchor = vcenter
										datacontext = "[GetScriptedGui('take_share_scripted_gui')]"
										tooltip = "FI_TAKE_SHARE_TOOLTIP"
										onclick = "[ScriptedGui.Execute(GuiScope.AddScope('invested_state', State.MakeScope).End )]"
										textbox = {

											size = { 100% 100% }
											text = "TAKE_SHARE_FROM_COUNTRY"
											align = hcenter
											parentanchor = vcenter
											multiline = yes
										}
									}
												
								}
							}
						}	
					}
				}
			}
		}
		blockoverride "header_back_button" {
			onclick = "[GetVariableSystem.Clear('invest_panel_var')]"
			datacontext = "[GetScriptedGui('fi_list_all_clear')]"
			onclick = "[ScriptedGui.Execute(GuiScope.AddScope('investor_country', GetPlayer.MakeScope).End )]"
		}

		blockoverride "header_close_button" {
			onclick = "[GetVariableSystem.Clear('invest_panel_var')]"
			datacontext = "[GetScriptedGui('fi_list_all_clear')]"
			onclick = "[ScriptedGui.Execute(GuiScope.AddScope('investor_country', GetPlayer.MakeScope).End )]"
		}
	}
}

template fifi_investment_panel {
	fi_investment_panel = {}
}
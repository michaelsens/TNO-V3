namespace = fi_dividend_collector

fi_dividend_collector.1 = {
	type = country_event
	hidden = yes

	trigger = {
		has_variable = fi_identification
	}

	immediate = {
		save_scope_as = fi_target_country
		fi_id_building_executor = {
			FUNCTION = collect_investment_dividend
		}
		
		set_variable = {
			name = dividend_collect_sum
			value = 0
		}
		every_country = {
			limit = {
				has_variable = fi_dividend_sum_total
				var:fi_dividend_sum_total > 0
			}
			set_local_variable = {
				name = fi_modifier_mult
				value = var:fi_dividend_sum_total
			}
			change_local_variable = {
				name = fi_modifier_mult
				multiply = country_gdp_dividend_penalty_cancel
			}
			add_modifier = {
				name = investment_dividend_payment
				multiplier = local_var:fi_modifier_mult
				days = 30
			}
			root = {
				change_variable = {
					name = dividend_collect_sum
					add = local_var:fi_modifier_mult
				}
			}
			remove_local_variable = fi_modifier_mult
			remove_variable = fi_dividend_sum_total
		}
		if = {
			limit = {
				has_variable = total_invested_building
				NOT = {
					any_scope_building = {
						is_building_type = building_investment_industry
					}
				}
			}
			capital = {
				create_building_effect = {
					BUILDING_TYPE = building_investment_industry
				}
			}
		}
		every_scope_building = {
			limit = {
				is_building_type = building_investment_industry
				level > 0
			}
			state = {
				if = {
					limit = {
						NOT = { root.capital = this }
					}
					remove_building = building_investment_industry
				}
			}
			root = {
				if = {
					limit = {
						prev.level < 10000
						has_variable = total_invested_building
						prev.level < var:total_invested_building
					}
					while = {
						limit = {
							has_variable = total_invested_building
							prev.level < var:total_invested_building
						}
						capital = {
							create_building_effect = {
								BUILDING_TYPE = building_investment_industry
							}
						}
					}
				}
				if = {
					limit = {
						prev.level < 10000
						has_variable = total_invested_building
						prev.level > var:total_invested_building
					}
					cancel_building_effect = yes
				}
				change_variable = {
					name = dividend_collect_sum
					divide = prev.level
				}
				change_variable = {
					name = dividend_collect_sum
					divide = fi_occupancy_min
				}
			}
			
			remove_modifier = investment_dividend_paid
			add_modifier = {
				name = investment_dividend_paid
				multiplier = root.fi_dividend_collect_sum_max
			}
		}
		
		remove_variable = dividend_collect_sum
	}
}


fi_dividend_collector.3 = {
	type = country_event
	duration = 3
	title = fi_dividend_collector.3.t
	desc = fi_dividend_collector.3.d
	flavor = fi_dividend_collector.3.f

	event_image = {
		video = "gfx/event_pictures/middleeast_police_breaking_door.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/middleeast/police_breaking_door"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	trigger = {
	}

	immediate = {
		random_state = {
			limit = {
				has_variable = destroyed_building_state
				NOT = { owner = root }
			}
			save_scope_as = destroyed_building_state
			set_local_variable = {
				name = destroyed_number_store
				value = var:destroyed_building_state
			}
			remove_variable = destroyed_building_state
			owner = {
				save_scope_as = destroyed_building_country
			}
		}
	}
	
	option = { 
		name = fi_dividend_collector.3.a
		default_option = yes
		add_loyalists = {
			value = small_radicals
			strata = rich
		}
		set_variable = investor_country
		scope:destroyed_building_country = {
			change_infamy = destroyed_total_number_capped_10
			change_relations = {
				country = root
				value = destroyed_total_number_capped_10_times_3
			}
			remove_local_variable = destroyed_number_store
			hidden_effect = { trigger_event = { id = fi_share_taking_executer.3 } }
		}
		ai_chance = {base = 9}
	}

	option = { 
		name = fi_dividend_collector.3.b
		add_radicals = {
			value = small_radicals
			strata = rich
		}
		remove_local_variable = destroyed_number_store
		ai_chance = {base = 1}
	}
}

fi_dividend_collector.4 = {
	type = country_event
	hidden = yes

	trigger = {
	}

	immediate = {
		save_scope_as = fi_target_country
		fi_id_building_executor = {
			FUNCTION = cancel_queued_construction
		}
	}
}

fi_dividend_collector.5 = {
	type = country_event
	hidden = yes

	trigger = {
		has_variable = fi_identification
	}

	immediate = {
		clear_variable_list = invested_states
		root = { save_scope_as = investor_country }
		every_state = {
			fi_add_list = yes
		}
	}
}

fi_dividend_collector.6 = {
	type = country_event
	hidden = yes

	trigger = {
		has_variable = fi_identification
		has_variable = number_of_foreign_construction
		capital = {
			OR = {
				NOT = {
					any_scope_building = {
						is_building_group = bg_investment_industry
					}
				}
				NOT = {
					any_scope_building = {
						is_building_group = bg_investment_industry
						is_under_construction = yes
					}
				}
			}
		}
	}

	immediate = {
		if = {
			limit = {
				has_variable = fi_identification
				has_variable = number_of_foreign_construction
				OR = {
					NOT = {
						any_scope_building = {
							is_building_group = bg_investment_industry
						}
					}
					NOT = {
						any_scope_building = {
							is_building_group = bg_investment_industry
							is_under_construction = yes
						}
					}
				}
			}
			trigger_event = { id = fi_dividend_collector.4 }
		}
	}
}


fi_dividend_collector.7 = {
	type = country_event
	hidden = yes

	trigger = {
		NOT = { has_variable = fi_identification }
		any_scope_building = {
			is_building_group = bg_investment_industry
		}
	}

	immediate = {
		every_scope_state = {
			limit = {
				any_scope_building = { is_building_group = bg_investment_industry }
			}
			remove_building = building_investment_industry 
			remove_building = building_investment_industry_low
			remove_building = building_investment_industry_high
			remove_building = building_investment_industry_very_high
		}
		every_state = {
			every_id_building_executor = {
				FUNCTION = clean_up_investment
			}
		}
	}
}

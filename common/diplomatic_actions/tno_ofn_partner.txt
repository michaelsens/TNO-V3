ofn_partner = {
	requires_approval = yes
	can_use_obligations = yes

	unlocking_technologies = {
		democracy
	}

	potential = {
		NOT = { is_country_type = decentralized }
		
		scope:actor = {
			this ?= c:USA
		}
		
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
		aggressive_diplomatic_plays_permitted = yes
		scope:target_country = {
			aggressive_diplomatic_plays_permitted = yes
		}
		NAND = {
			scope:target_country = { is_non_customs_union_subject = yes }
			scope:target_country = { is_subject_of = root }
		}
		NAND = {
			is_non_customs_union_subject = yes
			is_subject_of = scope:target_country
		}
	}
	
	possible = {
		NOT = { has_war_with = scope:target_country }
		has_diplomatic_relevance = scope:target_country
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER
			scope:target_country.relations:root >= relations_threshold:cordial
		}
		is_revolutionary = no
		scope:target_country = {
			is_revolutionary = no
		}
	}
	
	accept_effect = {
		if = {
			limit = {
				scope:target_country = {
					has_diplomatic_pact = {
						who = root
						type = defensive_pact
					}									
				}			
			}
			
			remove_diplomatic_pact = {
				country = scope:target_country
				type = defensive_pact
			}			
		}	
	}

	pact = {
		cost = 100
	
		is_defensive_pact = yes
		is_customs_union = yes
		income_transfer = 0.05
		recipient_gets_income_transfer = yes
		income_transfer_based_on_recipient = yes
		relations_progress_per_day = 3 # At 100, +1 relations
		relations_improvement_max = 80		
	
		is_about_to_auto_break = {
            scope:target_country.relations:root < 0 # this is: cordial + 3
		}

		should_auto_break = {
			custom_tooltip = {
				text = DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER_NOT

                # make sure to update is_about_to_auto_break when changing this:
				scope:target_country.relations:root < relations_threshold:cordial
			}		
		}

		should_invalidate = {
			OR = {
				NOT = { has_diplomatic_relevance = scope:target_country }
				has_war_with = scope:target_country				
				is_country_type = decentralized
				scope:target_country = { is_country_type = decentralized }
				aggressive_diplomatic_plays_permitted = no
				scope:target_country = { aggressive_diplomatic_plays_permitted = no }
				AND = {
					scope:target_country = { is_non_customs_union_subject = yes }
					scope:target_country = { is_subject_of = root }
				}
				AND = {
					is_non_customs_union_subject = yes
					is_subject_of = scope:target_country
				}
			}
		}

		break_effect = {
			change_relations = { country = scope:target_country value = -30 }
			create_truce = { country = scope:target_country months = 12 }
		}
	}

	ai = {
		check_acceptance_for_will_break = yes
		check_acceptance_for_will_propose = yes
	
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			if = {
				limit = {
					has_strategic_adjacency = scope:actor
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NEIGHBORS"
					value = 10
				}	
			}			

			if = {
				limit = { 
					has_strategy = ai_strategy_armed_isolationism 
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ISOLATIONIST"
					add = -50
				}
			}			
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				value = "scope:actor.ai_army_comparison(root)"
				min = -50
				max = 50
			}	

			if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					max = 20
				}					
			}
			else_if = {
				limit = {
					"scope:actor.ai_ideological_opinion(root)" < 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE"
					value = "scope:actor.ai_ideological_opinion(root)"
					multiply = 0.5
					min = -20
				}					
			}						
							
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = genial
							}
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}							
							has_attitude = {
								who = scope:actor
								attitude = loyal
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}							
						}
					}
					value = 50
				}
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cooperative
						}
					}
					value = 25
				}				
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = cautious
						}
					}
					value = -50
				}					
				if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}	
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}	
							has_attitude = {
								who = scope:actor
								attitude = rebellious
							}							
						}
					}
					value = -1000
				}							
			}			

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"			
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}	
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}				
			}
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -10
				}	
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -50
				}					
			}					

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
	
				if = {
					limit = { scope:actor = { country_rank > root.country_rank } }
					value = 20
				}
				
				if = {
					limit = { scope:actor = { country_rank < root.country_rank } }
					value = -20
				}				
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = "num_alliances_and_defensive_pacts_with_rivals(scope:actor)"
					multiply = -25
				}	
			}	

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_allies(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES"
					value = "num_alliances_and_defensive_pacts_with_allies(scope:actor)"
					multiply = 10
				}	
			}		

			if = {
				limit = {
					NOT = {
						has_diplomatic_pact = {
							who = root
							type = alliance
						}					
					}	
					"num_alliances" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_NUM_ALLIES"
					value = "num_alliances"
					multiply = -10
				}					
			}			
		}

		propose_score = {
			value = 10
			
			add = {
				value = scope:target_country.country_rank
				multiply = 3
			}			
		}

		propose_break_score = {
			value = 10
		}
		
		use_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}					
					value = 25
				}			
			}
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}					
					value = 50
				}			
			}
		}
		
		owe_obligation_chance = {
			value = 0
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank = root.country_rank }
					}				
					value = 5
				}	
			}			
	
			add = {
				if = {
					limit = {
						scope:target_country = { country_rank > root.country_rank }
					}				
					value = 10
				}	
			}			
		}	
	}
}

concept_economicllay_dependent_member:0 "Core Member of the Sphere"
concept_economicllay_dependent_member_desc:1 "[Concept('concept_recognized_power','$concept_recognized_powers$')] may turn a weaker [concept_country] into their $concept_economicllay_dependent_member$.
 A $concept_economicllay_dependent_member$ is a more autonomous [concept_subject] type that are able to start their own [Concept('concept_diplomatic_play','$concept_diplomatic_plays$')] and are not forced to join their [Concept('concept_overlord','$concept_overlord_possessive$')] [Concept('concept_war','$concept_wars$')]. They must pay #v 40%#! of their [concept_treasury] income to their $concept_overlord$ each week."


economicllay_dependent_member:0 "Core Member of the Sphere"
 economicllay_dependent_member_action_name:0 "[concept_economicllay_dependent_member]"
 economicllay_dependent_member_action_propose_name:0 "Make into [concept_economicllay_dependent_member]"
 economicllay_dependent_member_action_break_name:0 "Grant Independence"
 economicllay_dependent_member_action_ask_to_break_name:0 "Demand Independence"
 economicllay_dependent_member_desc:1 "#header $economicllay_dependent_member$#!\n$TOOLTIP_DELIMITER$\nA [concept_diplomatic_pact] that establishes a [concept_economicllay_dependent_member] type [concept_subject] relationship between two [Concept('concept_country', '$concept_countries$')]."
 economicllay_dependent_member_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName] is a [concept_economicllay_dependent_member] of [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName]."
 economicllay_dependent_member_action_notification_name:0 "Demand for [concept_economicllay_dependent_member]"
 economicllay_dependent_member_action_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become their [concept_economicllay_dependent_member]."
 economicllay_dependent_member_action_notification_break_name:0 "Independence Granted"
 economicllay_dependent_member_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] have ended our [concept_economicllay_dependent_member] status. We are independent once again."
 economicllay_dependent_member_proposal_notification_break_name:0 "Demand for Independence"
 economicllay_dependent_member_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetName] are demanding that we end their [concept_economicllay_dependent_member] status."
 economicllay_dependent_member_proposal_notification_break_effects_desc:0 "If we accept, they will become fully independent."
 economicllay_dependent_member_proposal_break_accepted_name:0 "Independence Granted"
 economicllay_dependent_member_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand to end our [concept_economicllay_dependent_member] status. We are independent once again."
 economicllay_dependent_member_proposal_break_declined_name:0 "Independence Refused"
 economicllay_dependent_member_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetName] refused the demand to end our [concept_economicllay_dependent_member] status."
 economicllay_dependent_member_proposal_notification_name:0 "Subjugation Demand"
 economicllay_dependent_member_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetName] demands that we submit to them and become their [concept_economicllay_dependent_member]."
 economicllay_dependent_member_proposal_notification_effects_desc:0 "If we accept, we will become their subject."
 economicllay_dependent_member_proposal_accepted_name:0 "Subjugation Accepted"
 economicllay_dependent_member_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetName] accepted the demand for them to become our [concept_economicllay_dependent_member]."
 economicllay_dependent_member_proposal_declined_name:0 "Subjugation Refused"
 economicllay_dependent_member_proposal_declined_desc:0 "[TARGET_COUNTRY.GetName] declined the demand for them to become our [concept_economicllay_dependent_member]."